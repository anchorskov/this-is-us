{
  "version": 3,
  "sources": ["../../../node_modules/src/src/IttyRouter.ts", "../../../node_modules/src/src/Router.ts", "../../../node_modules/src/src/createResponse.ts", "../../../node_modules/src/src/json.ts", "../../../node_modules/src/src/error.ts", "../../../node_modules/src/src/withParams.ts", "../../../node_modules/src/src/AutoRouter.ts", "../../../node_modules/src/src/StatusError.ts", "../../../node_modules/src/src/status.ts", "../../../node_modules/src/src/text.ts", "../../../node_modules/src/src/html.ts", "../../../node_modules/src/src/jpeg.ts", "../../../node_modules/src/src/png.ts", "../../../node_modules/src/src/webp.ts", "../../../node_modules/src/src/withContent.ts", "../../../node_modules/src/src/withCookies.ts", "../../../node_modules/src/src/cors.ts", "../../../src/index.mjs", "../../../../../../.nvm/versions/node/v22.14.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../../.nvm/versions/node/v22.14.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-Wol5rB/middleware-insertion-facade.js", "../../../../../../.nvm/versions/node/v22.14.0/lib/node_modules/wrangler/templates/middleware/common.ts", "../bundle-Wol5rB/middleware-loader.entry.ts"],
  "sourceRoot": "/home/anchor/projects/this-is-us/worker/.wrangler/tmp/dev-foz1Jj",
  "sourcesContent": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "// worker/src/index.mjs\n\nimport { Router } from 'itty-router';\nconst router = Router();\n\n// Serve PDF files via Worker to avoid cross-origin issues\nrouter.get('/api/events/pdf/:key', async (request, env) => {\n  const { key } = request.params;\n  const obj = await env.EVENT_PDFS.get(key, { allowScripting: true });\n  if (!obj) return new Response('Not found', { status: 404, headers: { 'Content-Type': 'text/plain' } });\n  return new Response(obj.body, {\n    status: 200,\n    headers: {\n      'Content-Type': obj.httpMetadata.contentType || 'application/pdf',\n      'Cache-Control': 'public, max-age=31536000',\n    },\n  });\n});\n\n// GET /api/events - include lat & lng for mapping\nrouter.get('/api/events', async (request, env) => {\n  const { results } = await env.EVENTS_DB.prepare(\n    `SELECT id, name, date, location, pdf_url, lat, lng\n     FROM events\n     WHERE date >= date('now')\n     ORDER BY date`\n  ).all();\n  return new Response(JSON.stringify(results), {\n    headers: { 'Content-Type': 'application/json' }\n  });\n});\n\n// Debug schema\nrouter.get('/_debug/schema', async (_, env) => {\n  const { results } = await env.EVENTS_DB.prepare(`PRAGMA table_info(events)`).all();\n  return new Response(JSON.stringify(results), { headers: { 'Content-Type': 'application/json' } });\n});\n\n// POST /api/events/create - handles event creation\nrouter.post('/api/events/create', async (request, env) => {\n  const form = await request.formData();\n\n  // accept either camelCase or snake_case field names\n  const userId        = form.get('userId')            ?? form.get('user_id')            ?? 'anonymous';\n  const name          = form.get('name');\n  const date          = form.get('date');\n  const location      = form.get('location');\n  const file          = form.get('file');\n  const description   = form.get('description')       || '';\n  const lat           = form.get('lat');\n  const lng           = form.get('lng');\n  const sponsor       = form.get('sponsor')           || '';\n  const contactEmail  = form.get('contactEmail') ?? form.get('contact_email') ?? '';\n  const contactPhone  = form.get('contactPhone') ?? form.get('contact_phone') ?? '';\n\n  console.log(\"\uD83D\uDCDD Incoming event submission:\", {\n    userId, name, date, location, lat, lng,\n    description, sponsor, contactEmail, contactPhone,\n    file: file?.name\n  });\n\n  if (!name || !date || !location || !file) {\n    console.warn(\"\u26A0\uFE0F Missing required fields\", { name, date, location, file });\n    return new Response(JSON.stringify({ error: 'Missing fields' }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n\n  try {\n    // Compute SHA\u2011256 hash of the PDF for deduplication\n    const buffer   = await file.arrayBuffer();\n    const hashBuf  = await crypto.subtle.digest('SHA-256', buffer);\n    const pdf_hash = Array.from(new Uint8Array(hashBuf))\n                         .map(b => b.toString(16).padStart(2, '0'))\n                         .join('');\n\n// Check for duplicate PDF only in production (skip on localhost or 127.x)\nconst host = (request.headers.get('host') || '').toLowerCase();\nconst isLocal = host.includes('localhost') || host.startsWith('127.');\n\nconsole.log(\"\uD83C\uDF10 Host header:\", host);\nconsole.log(\"\uD83E\uDDEA isLocal environment:\", isLocal);\n\nif (!isLocal) {\n  const { results: dup } = await env.EVENTS_DB.prepare(\n    `SELECT id FROM events WHERE pdf_hash = ?`\n  ).bind(pdf_hash).all();\n\n  if (dup.length) {\n    console.warn(\"\u26A0\uFE0F Duplicate PDF detected, aborting upload\", { pdf_hash });\n    return new Response(JSON.stringify({\n      error: 'Duplicate PDF',\n      duplicate: true\n    }), {\n      status: 409,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n\n    // Upload to R2\n    const key = `event-${crypto.randomUUID()}.pdf`;\n    await env.EVENT_PDFS.put(key, file.stream());\n    const origin = new URL(request.url).origin;\n    const pdf_url = `${origin}/api/events/pdf/${key}`;\n\n    console.log(`\uD83D\uDCC4 PDF uploaded, accessible at: ${pdf_url}`);\n\n    // Insert into D1 with coordinates\n    await env.EVENTS_DB.prepare(`\n      INSERT INTO events (\n        user_id, name, date, location, pdf_url,\n        lat, lng, sponsor, contact_email,\n        contact_phone, pdf_hash, description\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `).bind(\n      userId, name, date, location, pdf_url,\n      lat, lng, sponsor, contactEmail,\n      contactPhone, pdf_hash, description\n    ).run();\n\n    console.log(\"\u2705 Event saved to database\");\n\n    return new Response(JSON.stringify({ success: true }), {\n      status: 201,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (err) {\n    console.error(\"\u274C Error submitting event:\", err);\n    return new Response(JSON.stringify({ error: err.message }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n});\n\n// 404 fallback\nrouter.all('*', () => new Response('Not found', { status: 404 }));\n\nexport default {\n  async fetch(request, env, ctx) {\n    const corsHeaders = {\n      'Access-Control-Allow-Origin':  request.headers.get('Origin') || '*',\n      'Access-Control-Allow-Methods': 'GET,HEAD,POST,OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type',\n    };\n\n    if (request.method === 'OPTIONS') {\n      return new Response(null, { headers: corsHeaders });\n    }\n\n    const response = await router.fetch(request, env, ctx);\n    const newHeaders = new Headers(response.headers);\n    Object.entries(corsHeaders).forEach(([key, val]) => newHeaders.set(key, val));\n\n    return new Response(response.body, {\n      status:     response.status,\n      statusText: response.statusText,\n      headers:    newHeaders\n    });\n  },\n\n  async scheduled(event, env, ctx) {\n    const { results: expiredEvents } = await env.EVENTS_DB.prepare(\n      `SELECT id, pdf_url FROM events WHERE date < date('now','-1 day')`\n    ).all();\n\n    for (const ev of expiredEvents) {\n      try {\n        const url = new URL(ev.pdf_url);\n        const key = url.pathname.split('/').slice(2).join('/');\n        await env.EVENT_PDFS.delete(key);\n      } catch (e) {\n        console.error(`\uD83E\uDDE8 Failed to delete R2 asset for expired event ID ${ev.id}:`, e);\n      }\n    }\n\n    await env.EVENTS_DB.prepare(\n      `DELETE FROM events WHERE date < date('now','-1 day')`\n    ).run();\n  }\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/anchor/projects/this-is-us/worker/src/index.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/anchor/.nvm/versions/node/v22.14.0/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/anchor/.nvm/versions/node/v22.14.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/anchor/projects/this-is-us/worker/src/index.mjs\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/anchor/projects/this-is-us/worker/.wrangler/tmp/bundle-Wol5rB/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/anchor/.nvm/versions/node/v22.14.0/lib/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/anchor/projects/this-is-us/worker/.wrangler/tmp/bundle-Wol5rB/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/anchor/projects/this-is-us/worker/.wrangler/tmp/bundle-Wol5rB/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["Router", "base", "routes", "other", "__proto__", "Proxy", "get", "target", "prop", "receiver", "path", "route", "handlers", "push", "toUpperCase", "RegExp", "replace", "async", "request", "args", "response", "match", "url", "URL", "query", "k", "v", "searchParams", "concat", "t", "handler", "before", "proxy", "outer", "method", "regex", "pathname", "params", "groups", "err", "catch", "finally", "createResponse", "format", "transform", "body", "options", "Response", "headers", "set", "json", "JSON", "stringify", "text", "createResponse", "String", "html", "jpeg", "png", "webp"]
}

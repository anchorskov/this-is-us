rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    /* ───────────────────────────────
       👤  USER PROFILES
       path: /users/{userId}
    ─────────────────────────────── */
    match /users/{userId} {
      /* public read of SAFE fields only */
      allow get: if
        (resource.data.keys().hasOnly(['displayName', 'city', 'state'])) ||
        (request.auth != null && request.auth.uid == userId);

      /* self-write (no throttling rules yet) */
      allow create, delete: if request.auth != null && request.auth.uid == userId;

      /* self-update, with optional lastPostedAt throttle (60 s) */
      allow update: if request.auth != null && request.auth.uid == userId &&
        (
          !request.resource.data.diff(resource.data).changedKeys().hasOnly(['lastPostedAt']) ||           // normal edits
          request.resource.data.lastPostedAt > request.time - duration.value(60, 's')                     // throttled field
        );
    }

    /* ───────────────────────────────
       🗣️  LEGACY /townhall_posts/*
       (kept for backward compatibility)
    ─────────────────────────────── */
    match /townhall_posts/{postId} {
      allow read: if true;

      allow create: if isVerified();
      allow update: if request.auth != null && request.auth.uid == resource.data.createdBy;
      allow delete: if isAdminOrMod() || (request.auth != null && request.auth.uid == resource.data.createdBy);
    }

    /* ───────────────────────────────
       💬  THREADS & NESTED REPLIES
       path: /townhall_threads/{threadId}
    ─────────────────────────────── */
    match /townhall_threads/{threadId} {

      /* ---------- THREAD DOC ---------- */
      allow get, list: if true;        // public read

      allow create: if isVerified() &&
        request.resource.data.keys().hasOnly([
          'title','body','location','createdBy','timestamp','replyCount'
        ]) &&
        request.resource.data.createdBy == request.auth.uid &&
        request.resource.data.replyCount == 0;

      allow update: if request.auth != null &&
        request.auth.uid == resource.data.createdBy;

      allow delete: if isAdminOrMod() ||
        (request.auth != null && request.auth.uid == resource.data.createdBy);

      /* ---------- NESTED REPLIES ---------- */
      match /replies/{replyId} {
        allow get, list: if true;

        allow create: if isVerified() &&
          exists(/databases/$(db)/documents/townhall_threads/$(threadId)) &&
          request.resource.data.keys().hasOnly(['content','displayName','uid','timestamp']) &&
          request.resource.data.uid == request.auth.uid;

        allow update: if request.auth != null && request.auth.uid == resource.data.uid;

        allow delete: if isAdminOrMod() ||
          (request.auth != null && request.auth.uid == resource.data.uid);
      }
    }

    /* 🔒 deny everything else */
    match /{document=**} {
      allow read, write: if false;
    }

    /* ─────────── helper functions ─────────── */
    function isVerified() {
      return request.auth != null &&
        get(/databases/$(db)/documents/users/$(request.auth.uid)).data.verified == true;
    }
    function isAdminOrMod() {
      return request.auth != null &&
        get(/databases/$(db)/documents/users/$(request.auth.uid)).data.role in ['admin','moderator'];
    }
  }
}
